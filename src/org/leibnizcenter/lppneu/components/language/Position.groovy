package org.leibnizcenter.lppneu.components.language

import groovy.transform.EqualsAndHashCode
import groovy.util.logging.Log4j

@Log4j @EqualsAndHashCode
class Position {

    Position parent

    Boolean instantiated

    PositionRef ref

    String print() {
        String output = ""

        if (!ref) return "still to be defined"+"\n"
        output += ref.toString()+"\n"
        if (parent) output += "generated by "+parent.ref+"\n"
        if (instantiated) output += "instantiated"+"\n"
        else output += "not instantiated"+"\n"

        output
    }

    Position negate() {
        Position negated = this.clone()
        negated.ref.label = negated.ref.label.negate()
        negated
    }

    Position nullify() {
        Position nullified = this.clone()
        nullified.ref.label = nullified.ref.label.nullify()
        nullified
    }

    Position positive() {
        Position positive = this.clone()
        positive.ref.label = positive.ref.label.positive()
        positive
    }

    Position negative() {
        Position negative = this.clone()
        negative.ref.label = negative.ref.label.negative()
        negative
    }

}
