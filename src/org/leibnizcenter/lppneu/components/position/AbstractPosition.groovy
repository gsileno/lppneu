package org.leibnizcenter.lppneu.components.position

import org.leibnizcenter.lppneu.components.language.Expression
import org.leibnizcenter.lppneu.components.language.Operation

abstract class AbstractPosition {

    AbstractPosition parent
    AbstractPositionRef ref

    Boolean instantiated

    String print() {
        String output = ""

        if (!ref) return "still to be defined"+"\n"
        output += ref.toString()+"\n"
        if (parent) output += "generated by "+parent.ref+"\n"
        if (instantiated) output += "instantiated"+"\n"
        else output += "not instantiated"+"\n"

        output
    }

    abstract AbstractPosition negate()
    abstract AbstractPosition nullify()
    abstract AbstractPosition positive()
    abstract AbstractPosition negative()
    abstract Operation toOperation()
    abstract Expression toExpression()

}
